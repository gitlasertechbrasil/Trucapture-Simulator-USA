<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMMOAADDDgAAAAAAAAAA
        AAD/////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////3t7e/5iYmP+Wlpb/////////////////////////
        ////////////////////////////////////////vr6+/3Fxcf8pKSn/tbW1////////////////////
        ///////////////////////////////////z8/P/lpaT/1RVPv9fX1r/KSkp/1tbW//t7e3/////////
        ///////////////////////////////////b29v/enp6/3BwXP9BQRX/WFhQ/ysrK/8ZGRn/MjIy/8bG
        xv/////////////////////////////////BwcH/a2tb/0JCKP9ERST/QUEf/2xsbP8tLS3/Ghoa/x0d
        Hf8fHx//kZGR//39/f///////f39////////////kJCO/1tbNf9ERCj/YGBZ/2hoZv9ERET/R0dH/0ND
        Q/8eHh7/HR0d/xwcHP9aWlr/dXV1/1lZWf///////////4eHgv85ORb/Y2Nc/15eXv8rKyv/ISEh/yYm
        Jv89PT3/WVlZ/ycnJ/8dHR3/HBwc/xgYGP+zs7P///////////+IiIj/bW1t/0NDQ/8fHx//IiIi/yYm
        Jv8oKCj/KCgo/ywsLP9WVlb/PT09/x4eHv8bGxv/c3Nz////////////nJyc/zQ0NP8fHx//JCQk/ycn
        J/8nJyf/Jycn/ygoKP8oKCj/KCgo/0JCQv9TU1P/ISEh/1lZWf/////////////////y8vL/kJCQ/y0t
        Lf8nJyf/Jycn/ycnJ/8nJyf/Jycn/ygoKP8oKCj/Li4u/1BQUP92dnb/////////////////////////
        ///g4OD/ZWVl/ycnJ/8nJyf/Jycn/ycnJ/8nJyf/KCgo/zY2Nv9FRUX/19fX////////////////////
        //////////////////+7u7v/QEBA/ycnJ/8nJyf/MzMz/zY2Nv+AgID/8vLy////////////////////
        //////////////////////////////f39/9/f3//PT09/3p6ev/f39//////////////////////////
        //////////////////////////////////////////////v7+///////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>